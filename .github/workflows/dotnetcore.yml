name: .NET Core

on: [push]

env:
  NUGET_PACKAGES_DIRECTORY: '.nupkg'
  RESHARPER_CLI_NAME: 'JetBrains.ReSharper.CommandLineTools.Unix'
  RESHARPER_CLI_VERSION: "2019.3.4"
  DOCKER_DRIVER: overlay
  CONTAINER_IMAGE: codeclimate/codeclimate
  CONTAINER_TAG: '0.85.2'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.301
#     - name: Build with dotnet
#       run: dotnet build --configuration Release
#     - name: Tests
#       run: dotnet test --collect:"XPlat Code Coverage"
#     - name: Coverage Report
#       run: |
#         dotnet --version
#         dotnet tool install dotnet-reportgenerator-globaltool --tool-path tools
#         ./tools/reportgenerator "-reports:**/TestResults/*/coverage.cobertura.xml" "-targetdir:Reports" -reportTypes:TextSummary;
#         ./tools/reportgenerator "-reports:**/TestResults/*/coverage.cobertura.xml" "-targetdir:Reports" -reportTypes:Html;
#         ./tools/reportgenerator "-reports:**/TestResults/*/coverage.cobertura.xml" "-targetdir:Reports" -reportTypes:Badges;
#         cat ./Reports/Summary.txt
#     - uses: actions/upload-artifact@v1
#       with:
#           name: CodeCoverage
#           path: Reports
    - name: Resharper Code Quality
      run: |
        set -eux
        curl -LO "https://download.jetbrains.com/resharper/ReSharperUltimate.$RESHARPER_CLI_VERSION/$RESHARPER_CLI_NAME.$RESHARPER_CLI_VERSION.tar.gz"
        tar -xvf $RESHARPER_CLI_NAME.$RESHARPER_CLI_VERSION.tar.gz -d "resharper"
        mkdir -p CodeQuality
        files=(*.sln)
        sh ./resharper/dupfinder.sh "${files[0]}" --output=CodeQuality/dupfinderReport.html --format=Html
        sh ./resharper/inspectcode.sh "${files[0]}" --output=CodeQuality/inspectcodeReport.html --format=Html
    - uses: actions/upload-artifact@v1
      with:
          name: CodeQuality
          path: CodeQuality
  
  code_docs:
    runs-on: windows-latest
    name: code documentation
    steps:
      - uses: actions/checkout@v1
      - name: docfx
        run: |
          curl -LO "https://github.com/dotnet/docfx/releases/download/v2.48/docfx.zip"
          powershell.exe -NoP -NonI -Command "Expand-Archive '.\docfx.zip' '.\docfx\'" 
          ./docfx/docfx.exe
      - uses: actions/upload-artifact@v1
        with:
          name: CodeDocs
          path: _site

  security:
    runs-on: ubuntu-latest
    name: Snyk Security Scan
    steps:
      - uses: actions/checkout@v1
      - name: Snyk CLI Action
        uses: clarkio/snyk-cli-action@1.0.0
        with: # Set the secret as an input
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
